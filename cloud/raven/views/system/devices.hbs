
<h2>System Devices</h2>
<div class="bs-example" data-example-id="simple-table">
<table class="table table-striped">
  <thead>
    <tr>
      <th>#</th>
      <th>Name</th>
      <th>Device Type</th>
      <th>Use as Trigger</th>
      <th>Trigger Value</th>
      <th>Current Value</th>
    </tr>
  </thead>
  <tbody>
{{#each system.devices}}
    <tr>
      <th scope="row">{{inc @index}}</th>
      <td>{{name}}</td>
      <td>
        <select class="form-control device-type" id="device-type-id_{{id}}">
        {{#each ../deviceTypes}}
          <option value="{{id}}" {{#ifCond ../this.device_type_id '===' id}}selected{{/ifCond}}>{{name}}</option>
        {{/each}}
        </select>
      </td>
      <td>
        <select class="form-control should-trigger" id="should-trigger_{{id}}">
          <option value="1" {{#if should_trigger}}selected{{/if}}>Yes</option>
          <option value="0" {{#if should_trigger}}{{else}}selected{{/if}}>No</option>
        </select>
      </td>
      <td>{{trigger_value}}</td>
      <td id="device_1"></td>
    </tr>
{{/each}}
  </tbody>
</table>
</div>

<script>
  var socket = io.connect();
  // Announce itself to server.
  socket.emit('hello', { suid: '{{suid}}' });

  // Message received.
  socket.on('message', function(data) {
    var devices = data.devices || [];
    for(var i = 0; i < devices.length; i++) {
      var device = devices[i];
      $('#device_'+device.id).html((device.value).toFixed(6));
    }
});

// Update +device_type+ changed.
$('.device-type').on('change', function(event){
  socket.emit('rodgerThat', { data: {
      action : 'editDeviceType',
      id     : event.target.id.split('_')[1],
      value  : event.target.value
  }});
});

// Update +should_trigger+ when changed.
$('.should-trigger').on('change', function(event){
  socket.emit('rodgerThat', { data: {
      action : 'editShouldTrigger',
      id     : event.target.id.split('_')[1],
      value  : event.target.value
  }});
});
</script>


